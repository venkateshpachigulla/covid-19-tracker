[{"E:\\Technical materials learning\\Clever Programmer clone project videos\\Build a clone projects\\clone projects source\\covid-19-tracker\\covid-19-tracker\\src\\index.js":"1","E:\\Technical materials learning\\Clever Programmer clone project videos\\Build a clone projects\\clone projects source\\covid-19-tracker\\covid-19-tracker\\src\\App.js":"2","E:\\Technical materials learning\\Clever Programmer clone project videos\\Build a clone projects\\clone projects source\\covid-19-tracker\\covid-19-tracker\\src\\InfoBox.js":"3","E:\\Technical materials learning\\Clever Programmer clone project videos\\Build a clone projects\\clone projects source\\covid-19-tracker\\covid-19-tracker\\src\\Table.js":"4","E:\\Technical materials learning\\Clever Programmer clone project videos\\Build a clone projects\\clone projects source\\covid-19-tracker\\covid-19-tracker\\src\\Map.js":"5","E:\\Technical materials learning\\Clever Programmer clone project videos\\Build a clone projects\\clone projects source\\covid-19-tracker\\covid-19-tracker\\src\\util.js":"6","E:\\Technical materials learning\\Clever Programmer clone project videos\\Build a clone projects\\clone projects source\\covid-19-tracker\\covid-19-tracker\\src\\LineGraph.js":"7"},{"size":219,"mtime":1609335683400,"results":"8","hashOfConfig":"9"},{"size":4123,"mtime":1609851751310,"results":"10","hashOfConfig":"9"},{"size":823,"mtime":1609850581358,"results":"11","hashOfConfig":"9"},{"size":500,"mtime":1609843178273,"results":"12","hashOfConfig":"9"},{"size":795,"mtime":1609845280656,"results":"13","hashOfConfig":"9"},{"size":1821,"mtime":1609845464915,"results":"14","hashOfConfig":"9"},{"size":2757,"mtime":1609851631984,"results":"15","hashOfConfig":"9"},{"filePath":"16","messages":"17","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"18"},"qnh3j2",{"filePath":"19","messages":"20","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"21","messages":"22","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"18"},{"filePath":"23","messages":"24","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"18"},{"filePath":"25","messages":"26","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"27","messages":"28","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"29","messages":"30","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"31","usedDeprecatedRules":"18"},"E:\\Technical materials learning\\Clever Programmer clone project videos\\Build a clone projects\\clone projects source\\covid-19-tracker\\covid-19-tracker\\src\\index.js",[],["32","33"],"E:\\Technical materials learning\\Clever Programmer clone project videos\\Build a clone projects\\clone projects source\\covid-19-tracker\\covid-19-tracker\\src\\App.js",[],"E:\\Technical materials learning\\Clever Programmer clone project videos\\Build a clone projects\\clone projects source\\covid-19-tracker\\covid-19-tracker\\src\\InfoBox.js",[],"E:\\Technical materials learning\\Clever Programmer clone project videos\\Build a clone projects\\clone projects source\\covid-19-tracker\\covid-19-tracker\\src\\Table.js",[],"E:\\Technical materials learning\\Clever Programmer clone project videos\\Build a clone projects\\clone projects source\\covid-19-tracker\\covid-19-tracker\\src\\Map.js",[],"E:\\Technical materials learning\\Clever Programmer clone project videos\\Build a clone projects\\clone projects source\\covid-19-tracker\\covid-19-tracker\\src\\util.js",[],"E:\\Technical materials learning\\Clever Programmer clone project videos\\Build a clone projects\\clone projects source\\covid-19-tracker\\covid-19-tracker\\src\\LineGraph.js",["34"],"import React, { useState, useEffect } from 'react';\r\nimport { Line } from 'react-chartjs-2';\r\nimport numeral from 'numeral';\r\n\r\n\r\n// install numeral and react-chartjs-2 packages\r\n\r\nconst options = {\r\n    legend: {\r\n        display: false\r\n    },\r\n    elements: {\r\n        point: {\r\n            radius: 0\r\n        }\r\n    },\r\n    maintainAspectRatio: false,\r\n    tooltips: {\r\n        mode: \"index\",\r\n        intersect: false,\r\n        callbacks: {\r\n            label: function (tooltipItem, data) {\r\n                return numeral(tooltipItem.value).format(\"+0,0\")\r\n            }\r\n        }\r\n    },\r\n    scales: {\r\n        xAxes: [{\r\n            type: \"time\",\r\n            time: {\r\n                format: \"MM/DD/YY\",\r\n                toolTipFormat: \"ll\"\r\n            }\r\n        }],\r\n        yAxes: [{\r\n            gridLines: {\r\n                display: false\r\n            },\r\n            ticks: {\r\n                callback: function (value, index, values) {\r\n                    return numeral(value).format(\"0a\")\r\n\r\n                }\r\n            }\r\n        }]\r\n    }\r\n}\r\n\r\nconst buildChartData = (data, casesType = \"cases\") => {\r\n    const chartData = [];\r\n    let lastDataPoint;\r\n    for (const date in data[casesType]) {\r\n        if (lastDataPoint) {\r\n            const newDataPoint = {\r\n                x: date,\r\n                y: data[casesType][date] - lastDataPoint\r\n            }\r\n            chartData.push(newDataPoint)\r\n        }\r\n        lastDataPoint = data[casesType][date]\r\n    }\r\n\r\n    return chartData;\r\n}\r\n\r\nfunction LineGraph({ casesType = \"cases\" }) {\r\n    // https://disease.sh/v3/covid-19/historical/all?lastdays=120\r\n    const [data, setData] = useState({});\r\n\r\n    useEffect(() => {\r\n        const fetchData = async () => {\r\n            await fetch('https://disease.sh/v3/covid-19/historical/all?lastdays=120')\r\n                .then(response => response.json())\r\n                .then(data => {\r\n                    console.log(data);\r\n                    const chartData = buildChartData(data, casesType)\r\n                    setData(chartData);\r\n                });\r\n        };\r\n        fetchData();\r\n    }, [])\r\n\r\n    return (\r\n        <div className=\"app__graph\">\r\n            <h1> line graph</h1>\r\n            {data?.length > 0 && (\r\n                <Line\r\n                    options={options}\r\n                    data={{\r\n                        datasets: [\r\n                            {\r\n                                backgroundColor: \"rgba(204,16,52,0.5)\",\r\n                                borderColor: \"#CC1034\",\r\n                                data: data\r\n                            },\r\n                        ]\r\n                    }}\r\n                />)}\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default LineGraph\r\n",{"ruleId":"35","replacedBy":"36"},{"ruleId":"37","replacedBy":"38"},{"ruleId":"39","severity":1,"message":"40","line":81,"column":8,"nodeType":"41","endLine":81,"endColumn":10,"suggestions":"42"},"no-native-reassign",["43"],"no-negated-in-lhs",["44"],"react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'casesType'. Either include it or remove the dependency array.","ArrayExpression",["45"],"no-global-assign","no-unsafe-negation",{"desc":"46","fix":"47"},"Update the dependencies array to be: [casesType]",{"range":"48","text":"49"},[2136,2138],"[casesType]"]